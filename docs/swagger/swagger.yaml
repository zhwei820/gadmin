basePath: /
definitions:
  api_model.CreateUser:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      passwordconfirm:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  api_model.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  api_model.PostRole:
    properties:
      name:
        type: string
      role:
        type: string
    type: object
  api_model.SetRoleByUserName:
    properties:
      roles:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  api_model.SetRoleMenus:
    properties:
      menus:
        items:
          type: string
        type: array
      role:
        type: string
    type: object
  api_model.UpdateUser:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      passwordconfirm:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  model.MenuOut:
    properties:
      alwaysshow:
        type: integer
      auto_create:
        type: integer
      children:
        items:
          $ref: '#/definitions/model.MenuOut'
        type: array
      component:
        type: string
      hidden:
        type: integer
      icon:
        type: string
      id:
        type: integer
      menu_id:
        type: integer
      menu_path:
        type: string
      nocache:
        type: integer
      parent_id:
        type: integer
      redirect:
        type: string
      sort:
        type: integer
      title:
        type: string
    type: object
info:
  contact:
    email: hello@hello.io
    name: hello
    url: http://www.hello.io
  description: This is a hello server .
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://hello.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /rbac/login:
    post:
      description: 登陆
      parameters:
      - description: Login
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/api_model.Login'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 登陆
      tags:
      - auth
  /rbac/loginkey:
    get:
      description: 获取登录的加密key
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 获取登录的加密key
      tags:
      - auth
  /rbac/logout:
    post:
      description: 登出
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 登出
      tags:
      - auth
  /rbac/menu:
    delete:
      description: delete menu
      parameters:
      - description: name
        in: query
        name: name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: delete menu
      tags:
      - menu
    get:
      description: menu list
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: menu list
      tags:
      - menu
    post:
      description: create menu
      parameters:
      - description: MenuOut
        in: body
        name: SignInInfo
        required: true
        schema:
          $ref: '#/definitions/model.MenuOut'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: create menu
      tags:
      - menu
    put:
      description: update menu
      parameters:
      - description: MenuOut
        in: body
        name: SignInInfo
        required: true
        schema:
          $ref: '#/definitions/model.MenuOut'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: update menu
      tags:
      - menu
  /rbac/policy:
    get:
      description: policy list
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: policy list
      tags:
      - policy
    put:
      description: SetPolicyByRole
      parameters:
      - description: PostRole
        in: body
        name: PostRole
        required: true
        schema:
          $ref: '#/definitions/api_model.PostRole'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: SetPolicyByRole
      tags:
      - policy
  /rbac/policy/byrole:
    get:
      description: GetPolicyByRole
      parameters:
      - description: role
        in: query
        name: policy
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: GetPolicyByRole
      tags:
      - policy
  /rbac/refresh_token:
    get:
      description: 刷新token
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 刷新token
      tags:
      - auth
  /rbac/role:
    delete:
      description: delete role
      parameters:
      - description: role
        in: query
        name: role
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: delete role
      tags:
      - role
    get:
      description: role list
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: username
        in: query
        name: username
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: role list
      tags:
      - role
    post:
      description: create role
      parameters:
      - description: PostRole
        in: body
        name: PostRole
        required: true
        schema:
          $ref: '#/definitions/api_model.PostRole'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: create role
      tags:
      - role
    put:
      description: Update role
      parameters:
      - description: PostRole
        in: body
        name: PostRole
        required: true
        schema:
          $ref: '#/definitions/api_model.PostRole'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Update role
      tags:
      - role
  /rbac/role/byuser:
    put:
      description: SetRoleByUserName
      parameters:
      - description: SetRoleByUserName
        in: body
        name: SetRoleByUserName
        required: true
        schema:
          $ref: '#/definitions/api_model.SetRoleByUserName'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: SetRoleByUserName
      tags:
      - role
  /rbac/role/menu:
    put:
      description: SetRoleMenus
      parameters:
      - description: SetRoleMenus
        in: body
        name: SetRoleMenus
        required: true
        schema:
          $ref: '#/definitions/api_model.SetRoleMenus'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: SetRoleMenus
      tags:
      - role
  /rbac/user:
    delete:
      description: delete user
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: delete user
      tags:
      - user
    get:
      description: user list
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: user list
      tags:
      - user
    post:
      description: CreateUser
      parameters:
      - description: CreateUser
        in: body
        name: CreateUser
        required: true
        schema:
          $ref: '#/definitions/api_model.CreateUser'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: CreateUser
      tags:
      - user
    put:
      description: UpdateUser
      parameters:
      - description: UpdateUser
        in: body
        name: UpdateUser
        required: true
        schema:
          $ref: '#/definitions/api_model.UpdateUser'
          type: object
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: UpdateUser
      tags:
      - user
  /rbac/user/info:
    get:
      description: user info
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: user info
      tags:
      - user
  /rbac/user/menu:
    get:
      description: user menu
      parameters:
      - description: RoleConfig
        in: query
        name: RoleConfig
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: user menu
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
