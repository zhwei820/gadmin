swagger: '2.0'
info:
  version: 0.0.2
  title: gadmin 接口文档
  description: |
    更新时间：2019年5月24日 16:23:58
schemes:
  - http
host: localhost:8199
basePath: /v1

#请求路径
paths:
##登录相关
  /loginkey:
    get:
      summary: 获取登录密码加密密钥
      description: |
        请求一个加密密钥，返回的内容包含密钥id（kid）、加密类型（cryptotype）、加密密钥（key）。
        ```js
        {
          "code": 20000,
          "data": {
            "kid": "BU06PZLJPUNK90L44T",
            "cryptotype": "RSA-PKCS1v1.5",
            "key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsAj30qPj3YT7n4bm2uyr\nglOugXyvv34k/kwHkrS/KlLNsvbbGbmAv8fMakuPxm64LKXjX/16+P5IQgNuqWjg\nqoqllB+9Ex3fftEa+YE9hxIlkfBVrhV3SFxJe1bR2QbdgN/tNmnrmwjxCpgeyrCM\nKE/ifAkImgNfC6KCavY7idklRMv/Xji53H1TUoarN2kHFfde5NGfd/Z+9GoB633U\nWi6zJ6vMhinlCaPVQlBHHwIRqMlzC3CWXR3Tx42o4GgPktkZjWK0+DqUUhF7amXC\n/diypzSBsVmCEn68U52byW9vSHiWlRA0N9/stHCZ5M3NcnnZF9JV6XcYjlgHj3ZD\nEwIDAQAB\n-----END PUBLIC KEY-----\n",
            "timestamp": 1557542458
          },
          "message": "success"
        }
      tags:
        - Login
      parameters:
      responses:
        200:
          $ref: '#/responses/LoginKey'
  /login:
    post:
      summary: 登录
      description: |
        登录需要先 get 请求/loginkey 获取 RSA 的加密公钥（单次有效，并密钥有时效），将密码使用 RSA-PKCS1v1.5 方式加密并使用 base64 编码
        
        使用 forge.js 进行加密数据

        https://raw.githubusercontent.com/loveiset/RSAForPostman/master/forge.js

        var publicKey = forge.pki.publicKeyFromPem(公钥);

        var encryptedText = forge.util.encode64(publicKey.encrypt(真实密码));

        最终提交的格式

        ```
        Content-Type: application/json
        POST
        {
            "username":"admin",
            "password":encryptedText,
            "kid":"BTNK5IF7DYC8287814"//公钥的 id
        }
        ```

      tags:
        - Login
      parameters:
        - name: body
          in: body
          description: 登录数据
          schema:
            required:
              - kid
              - password
              - username
            properties:
              kid:
                type: string
              password:
                type: string
              username:
                type: string
      responses:
        200:
          $ref: '#/responses/Login'
  /refresh_token:
    get:
      summary: 刷新token
      description: t
      tags:
        - Login
      security:
        - Authorization: []
      responses:
        200:
          $ref: '#/responses/Login'
  /logout:
    get:
      summary: 退出登录
      description: t
      tags:
        - Login
      security:
        - Authorization: []
      responses:
        200:
          $ref: '#/responses/Success'
##用户相关
  /user/info:
    get:
      summary: 获取用户信息
      description: t
      tags:
        - User
      security:
        - Authorization: []
      responses:
        200:
          $ref: '#/responses/UserInfo'
  /user:
    get:
      summary: 获取用户列表
      description: 获取用户列表
      tags:
        - User
      security:
        - Authorization: []
      parameters:
       - $ref: "#/parameters/page"
       - $ref: "#/parameters/limit"
      responses:
        200:
          $ref: '#/responses/UserList'
    post:
      summary: 添加用户
      description: 添加用户
      tags:
        - User
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/parameters/UserPost"
      responses:
        200:
          $ref: '#/responses/Success'
    put:
      summary: 修改用户
      description: 修改用户
      tags:
        - User
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/parameters/UserPut"
      responses:
        200:
          $ref: '#/responses/Login'
    delete:
      summary: 删除用户
      description: 删除用户
      tags:
        - User
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        200:
          $ref: '#/responses/Success'
##角色相关
  /role:
    get:
      summary: 获取角色列表
      description: 获取角色列表
      tags:
        - Role
      security:
        - Authorization: []
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/limit"
        - name: username
          in: query
          description: 用户名（编辑用户角色的时候使用这个参数，不使用分页参数）
          type: string
      responses:
        200:
          $ref: '#/responses/RoleList'
    post:
      summary: 添加角色
      description: 添加角色
      tags:
        - Role
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Role"
      responses:
        200:
          $ref: '#/responses/Success'
    put:
      summary: 修改角色
      description: 修改角色
      tags:
        - Role
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Role"
      responses:
        200:
          $ref: '#/responses/Login'
    delete:
      summary: 删除角色
      description: 删除角色
      tags:
        - Role
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Role"
      responses:
        200:
          $ref: '#/responses/Success'
  /role/byuser:
    put:
      summary: 获取角色权限
      description: 获取角色权限
      tags:
        - Role
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/parameters/UserRolePut"
      responses:
        200:
          $ref: '#/responses/Success'
  /role/menu:
    put:
      summary: 修改角色菜单
      description: 修改角色菜单
      tags:
        - Role
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/parameters/RoleMenuPut"
      responses:
        200:
          $ref: '#/responses/Success'
##权限相关
  /policy:
    get:
      summary: 获取用户列表
      description: 获取用户列表
      tags:
        - Policy
      security:
        - Authorization: []
      parameters:
       - $ref: "#/parameters/page"
       - $ref: "#/parameters/limit"
      responses:
        200:
          $ref: '#/responses/PolicyList'
    put:
      summary: 修改用户
      description: 修改用户
      tags:
        - Policy
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Policy"
      responses:
        200:
          $ref: '#/responses/Success'
  /policy/byrole:
    get:
      summary: 获取角色权限
      description: 获取角色权限
      tags:
        - Policy
      security:
        - Authorization: []
      parameters:
       - name: role
         in: query
         description: 角色名
         type: string
      responses:
        200:
          $ref: '#/responses/RolePolicyList'
    put:
      summary: 设置角色权限
      description: 设置角色权限
      tags:
        - Policy
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/parameters/RolePolicyPut"
      responses:
        200:
          $ref: '#/responses/Success'
##菜单相关
  /menu:
    get:
      summary: 获取菜单列表
      description: 获取菜单列表
      tags:
        - Menu
      security:
        - Authorization: []
      parameters:
       - $ref: "#/parameters/page"
       - $ref: "#/parameters/limit"
      responses:
        200:
          $ref: '#/responses/MenuList'
    post:
      summary: 添加菜单
      description: 添加菜单
      tags:
        - Menu
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/parameters/MenuPost"
      responses:
        200:
          $ref: '#/responses/Success'
    put:
      summary: 修改菜单
      description: 修改菜单
      tags:
        - Menu
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/parameters/MenuPut"
      responses:
        200:
          $ref: '#/responses/Login'
    delete:
      summary: 删除菜单
      description: 删除菜单
      tags:
        - Menu
      security:
        - Authorization: []
      parameters:
        - name: body
          in: body
          schema:
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        200:
          $ref: '#/responses/Success'

#自定义结构
definitions:
#基础返回
  Result:
    properties:
      code:
        type: integer
        format: int
        default: 2000
      message:
        type: string
      data:
        type: object
  Success:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
  Error:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
##User
  UserBase:
    properties:
      nick_name:
        type: string
      email:
        type: string
      phone:
        type: string
  User:
    allOf:
    - $ref: '#/definitions/UserBase'
    - type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_name:
          type: string
        Introduction:
          type: string
        status:
          type: integer
        age:
          type: integer
        add_user_id:
          type: integer
          readOnly: true
        create_time:
          type: string
          format: date-time
          readOnly: true
        update_time:
          type: string
          format: date-time
          readOnly: true
  Users:
    type: array
    items:
      $ref: "#/definitions/User"
##Role
  Role:
    properties:
      name:
        type: string
      role:
        type: string
  Roles:
    type: array
    items:
      $ref: "#/definitions/Role"
##Policy
  Policy:
    properties:
      name:
        type: string
      policy:
        type: string
  Policys:
    type: array
    items:
      $ref: "#/definitions/Policy"
##Menu
  Meta:
    properties:
      noCache:
        type: boolean
      icon:
        type: string
      title:
        type: string
  Menu:
    properties:
      alwaysShow:
        type: boolean
      component:
        type: string
      hidden:
        type: boolean
      name:
        type: string
      parent_name:
        type: string
      path:
        type: string
      redirect:
        type: string
      sort:
        type: integer
      meta:
        $ref: "#/definitions/Meta"
      children:
        $ref: "#/definitions/Menus"
  Menus:
    type: array
    items:
      $ref: "#/definitions/Menu"

#请求参数
parameters:
  page:
    name: page
    in: query
    description: Page number
    type: integer
  limit:
    name: limit
    in: query
    description: limit
    type: integer
  UserPost:
    allOf:
    - $ref: '#/parameters/UserPut'
    - type: object
      properties:
        user_name:
          type: string
  UserPut:
    allOf:
    - $ref: '#/definitions/UserBase'
    - type: object
      properties:
        password:
          description: 添加时必填，修改时选填。
          type: string
          format: password
        passwordconfirm:
          description: 添加时必填，修改时选填。
          type: string
          format: password
  UserRolePut:
    properties:
      roles:
        type: array
        items:
          type: string
      username:
        type: string
  RolePolicyPut:
    properties:
      policys:
        type: array
        items:
          type: string
      role:
        type: string
  RoleMenuPut:
    properties:
      menus:
        type: array
        items:
          type: string
      role:
        type: string
  MenuPost:
    allOf:
    - $ref: '#/definitions/Menu'
    - type: object
  MenuPut:
    allOf:
    - $ref: '#/definitions/Menu'
    - type: object

#响应
responses:
  Success:
    description: Seccess
    schema:
      $ref: '#/definitions/Success'
  Error500:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/Error'
##Login
  LoginKey:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            cryptotype:
              type: string
            key:
              type: string
            kid:
              type: string
            timestamp:
              type: string
  Login:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            expire:
              type: string
            token:
              type: string
##User
  UserInfo:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            avatar:
              type: string
            introduction:
              type: string
            name:
              type: string
            roles:
              type: array
              items:
                type: string
  UserList:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            total:
              type: integer
            items:
              $ref: "#/definitions/Users"
##Role
  RoleList:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            total:
              type: integer
            items:
              $ref: "#/definitions/Roles"
            role_items:
              $ref: "#/definitions/Roles"
  RolePolicyList:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            total:
              type: integer
            all_policy_items:
              $ref: "#/definitions/Policys"
            role_policy_items:
              $ref: "#/definitions/Policys"
##Policy
  PolicyList:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            total:
              type: integer
            items:
              $ref: "#/definitions/Policys"
##Menu
  MenuList:
    allOf:
    - $ref: '#/definitions/Result'
    - type: object
      properties:
        data:
          type: object
          properties:
            total:
              type: integer
            items:
              $ref: "#/definitions/Menus"

#标签
tags:
  - name: Login
    description: 登录相关
  - name: User
    description: 用户相关
  - name: Role
    description: 角色相关
  - name: Policy
    description: 权限相关
  - name: Menu
    description: 菜单相关

#API鉴权
securityDefinitions:
  Authorization:
    name: Authorization
    type: apiKey
    in: header
